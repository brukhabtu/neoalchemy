name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:4.4
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: uv pip install -e ".[dev]"

    - name: Wait for Neo4j to be ready
      run: |
        echo "ðŸ”„ Waiting for Neo4j to be ready..."
        timeout 60 bash -c 'until curl -f http://localhost:7474; do sleep 2; done'
        echo "âœ… Neo4j is ready!"

    - name: Run integration tests
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
      run: |
        echo "ðŸ§ª Running integration tests..."
        uv run python -m pytest tests/integration/ -m integration -v --tb=short

    - name: Run integration tests with coverage
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
      run: |
        echo "ðŸ“Š Running integration tests with coverage..."
        uv run python -m pytest tests/integration/ -m integration --cov=neoalchemy --cov-report=term-missing