[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "neoalchemy"
version = "0.1.0"
description = "A SQLAlchemy-inspired ORM for Neo4j"
authors = [
    {name = "NeoAlchemy Team", email = "neoalchemy@example.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic>=2.0.0",
    "neo4j>=5.0.0",
    "venusian>=3.0.0",
    "pytz>=2023.3",
    "mcp[cli]>=1.6.0",
]

[tool.setuptools]
packages = ["neoalchemy", "graph-mcp", "tests"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = []

[tool.mypy]
python_version = "3.10"
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true

[[tool.mypy.overrides]]
module = "neoalchemy.core.expressions.fields"
disallow_untyped_defs = false
disallow_incomplete_defs = false
# Ignore operator overloading mismatches with parent class
disable_error_code = ["override", "operator"]

[[tool.mypy.overrides]]
module = "neoalchemy.core.expressions.functions"
disable_error_code = ["override"]

[[tool.mypy.overrides]]
module = "neoalchemy.core.field_registration"
ignore_missing_imports = true

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.2",
]
